factoextra::fviz_eig(pcaspotifydata2)
type.convert(rt)
type.convert(rt())
type.convert("rt")
type.convert("rt", as.is=TRUE)
stroopdataclean$subject <- factor(rt$subject)
stroopdataclean$congruency <- factor(rt$congruency)
groupstroop <- group_by(stroopdataclean, subject, congruency)
summarisestroop <- summarise(groupstroop, mean(rt))
groupstroop <- group_by(stroopdataclean, subject, congruency)
summarisestroop <- summarise(groupstroop, mean(rt))
stroopdataclean <- stroopdata %>%
filter(correct != 999) %>%
filter(phase != 'practice') %>%
filter(congruency != 'baseline')
stroopdataclean <- stroopdata %>%
filter(correct != 999) %>%
filter(phase != 'practice') %>%
filter(congruency != 'baseline')
widestroopdata <- pivot_wider(stroopdataclean, names_from = phase, values_from = rt)
View(widestroopdata)
pcaspotifydata <- select(spotifydata, -X, -Track.Name, -Artist, -Streams, -time_signature)
pcaspotifydata2 <- prcomp(pcaspotifydata)
summary(pcaspotifydata2)
factoextra::fviz_eig(pcaspotifydata2)
fviz_pca_var(pcaspotifydata2)
cor(pcaspotifydata2)
pcaspotifydata3 <- prcomp(pcaspotifydata2, scale = TRUE)
summary(pcaspotifydata3)
factoextra::fviz_eig(pcaspotifydata3)
pcaspotifydata3 <- prcomp(pcaspotifydata2, scale = TRUE)
as.numeric(stroopdataclean$rt)
stroopdataclean$subject <- factor(rt$subject)
stroopdataclean$congruency <- factor(rt$congruency)
groupstroop <- group_by(stroopdataclean, subject, congruency)
summarisestroop <- summarise(groupstroop, mean(rt))
stroopdataclean
summary(stroopdataclean)
as.numeric(stroopdataclean$rt)
stroopdataclean <- as.numeric(stroopdataclean$rt)
stroopdataclean
summary(stroopdataclean)
stroopdataclean$subject <- factor(rt$subject)
stroopdataclean$congruency <- factor(rt$congruency)
stroopdataclean$subject <- as.factor(rt$subject)
stroopdataclean$congruency <- as.factor(rt$congruency)
stroopdataclean <- as.numeric(stroopdataclean$rt)
as.numeric(stroopdataclean$rt)
stroopdataclean$subject <- factor(rt$subject)
stroopdataclean$congruency <- factor(rt$congruency)
stroopdata <- read.csv('stroop_standing_data.csv')
stroopdataclean <- stroopdata %>%
filter(correct != 999) %>%
filter(phase != 'practice') %>%
filter(congruency != 'baseline')
as.numeric(stroopdataclean$rt)
stroopdataclean$subject <- factor(rt$subject)
stroopdataclean$congruency <- factor(rt$congruency)
stroopdataclean$subject <- factor(rt$subject)
stroopdataclean$congruency <- factor(rt$'congruency')
stroopdataclean$congruency <- factor(rt[congruency])
stroopdataclean$congruency <- factor(rt['congruency'])
stroopdataclean$subject <- factor(stroopdataclean$subject)
stroopdataclean$congruency <- factor(stroopdataclean$congruency)
groupstroop <- group_by(stroopdataclean, subject, congruency)
summarisestroop <- summarise(groupstroop, mean(rt))
warnings()
summary(stroopdataclean)
stroopdatacelan$rt <- as.numeric(stroopdataclean$rt)
stroopdataclean$rt <- as.numeric(stroopdataclean$rt)
stroopdataclean$subject <- factor(stroopdataclean$subject)
stroopdataclean$congruency <- factor(stroopdataclean$congruency)
groupstroop <- group_by(stroopdataclean, subject, congruency)
summarisestroop <- summarise(groupstroop, mean(rt))
View(summarisestroop)
widestroopdata <- pivot_wider(stroopdataclean, names_from = phase, values_from = rt)
View(widestroopdata)
widestroopdata <- pivot_wider(summarisestroop, names_from = condition, values_from = rt)
View(widestroopdata)
widestroopdata <- pivot_wider(summarisestroop, names_from = congruency, values_from = rt)
widestroopdata <- pivot_wider(summarisestroop, names_from = congruency, values_from = mean(rt))
summary(summarisestroop)
widestroopdata <- pivot_wider(summarisestroop, names_from = subject, values_from = mean(rt))
widestroopdata <- pivot_wider(summarisestroop, names_from = congruency, values_from = mean(rt))
widestroopdata <- pivot_wider(summarisestroop, names_from = congruency, values_from = 'mean(rt)')
View(widestroopdata)
stroopdatafinal <- drop_na(widestroopdata)
View(stroopdatafinal)
lm(congruency ~ rt, stroopdatafinal)
summarisestroop <- summarise(groupstroop, mean(rt), condition)
widestroopdata <- pivot_wider(summarisestroop, names_from = congruency, values_from = 'mean(rt)')
stroopnona <- drop_na(widestroopdata)
stroopdatafinal <- mutate(stroopnona, stroopeffect = congruent-incongruent)
stroopdataclean$rt <- as.numeric(stroopdataclean$rt)
stroopdataclean$subject <- factor(stroopdataclean$subject)
stroopdataclean$phase <- factor(stroopdataclean$phase)
groupstroop <- group_by(stroopdataclean, subject)
summarisestroop <- summarise(groupstroop, mean(rt), phase)
widestroopdata <- pivot_wider(summarisestroop, names_from = phase, values_from = 'mean(rt)')
stroopdataclean$rt <- as.numeric(stroopdataclean$rt)
stroopdataclean$subject <- factor(stroopdataclean$subject)
stroopdataclean$phase <- factor(stroopdataclean$phase)
groupstroop <- group_by(stroopdataclean, subject)
summarisestroop <- summarise(groupstroop, mean(rt), phase)
stroopdatafinal <- mutate(stroopnona, stroopeffect = congruent-incongruent)
stroopdataclean$subject <- factor(stroopdataclean$subject)
stroopdataclean$congruency <- factor(stroopdataclean$congruency)
groupstroop <- group_by(stroopdataclean, subject)
summarisestroop <- summarise(groupstroop, mean(rt), congruency)
stroopdatafinal <- mutate(stroopnona, stroopeffect = congruent-incongruent)
stroopdataclean$subject <- factor(stroopdataclean$subject)
stroopdataclean$congruency <- factor(stroopdataclean$congruency)
groupstroop <- group_by(stroopdataclean, subject)
summarisestroop <- summarise(groupstroop, mean(rt), congruency)
widestroopdata <- pivot_wider(summarisestroop, names_from = phase, values_from = 'mean(rt)')
stroopnona <- drop_na(widestroopdata)
widestroopdata <- pivot_wider(summarisestroop, names_from = congruency, values_from = 'mean(rt)')
stroopnona <- drop_na(widestroopdata)
stroopdatafinal <- mutate(stroopnona, stroopeffect = congruent-incongruent)
View(stroopnona)
stroopdataclean$rt <- as.numeric(stroopdataclean$rt)
stroopdataclean$subject <- factor(stroopdataclean$subject)
stroopdataclean$congruency <- factor(stroopdataclean$congruency)
groupstroop <- group_by(stroopdataclean, subject)
summarisestroop <- summarise(groupstroop, mean(rt), congruency)
widestroopdata <- pivot_wider(summarisestroop, names_from = congruency, values_from = 'mean(rt)')
widestroopdata <- pivot_wider(summarisestroop, names_from = congruency, values_from = 'mean(rt)')
stroopdataclean$rt <- as.numeric(stroopdataclean$rt)
stroopdataclean$subject <- factor(stroopdataclean$subject)
stroopdataclean$congruency <- factor(stroopdataclean$congruency)
groupstroop <- group_by(stroopdataclean, subject)
summarisestroop <- summarise(groupstroop, mean(rt))
widestroopdata <- pivot_wider(summarisestroop, names_from = congruency, values_from = 'mean(rt)')
stroopnona <- drop_na(widestroopdata)
groupstroop <- group_by(stroopdataclean, subject, congruency)
summarisestroop <- summarise(groupstroop, mean(rt))
widestroopdata <- pivot_wider(summarisestroop, names_from = congruency, values_from = 'mean(rt)')
stroopnona <- drop_na(widestroopdata)
View(stroopnona)
setwd("~/PG Year 1/Spring Modules/PS947 Advanced Statistics for Research/Homework3")
stroopdatafinal <- mutate(stroopnona, stroopeffect = congruent-incongruent)
lm(congruency ~ rt, stroopdatafinal)
lm(stroopeffect ~ phase, stroopdatafinal)
groupstroop <- group_by(stroopdataclean, subject, congruency, phase)
summarisestroop <- summarise(groupstroop, mean(rt))
widestroopdata <- pivot_wider(summarisestroop, names_from = congruency, values_from = 'mean(rt)')
stroopnona <- drop_na(widestroopdata)
stroopdatafinal <- mutate(stroopnona, stroopeffect = congruent-incongruent)
lm(stroopeffect ~ phase, stroopdatafinal)
stroopmodel <- lm(stroopeffect ~ phase, stroopdatafinal)
summary(stroopmodel)
ggplot(stroopdatafinal, aes(congruency, stroopeffect, fill = phase)) + geom_col(position = "dodge") +
xlab('Target side') + ylab('Mean accuracy') + labs(fill = "Subject number") +
theme_few() + scale_fill_few()
ggplot(stroopdatafinal, aes(congruency, stroopeffect, fill = phase)) + geom_col(position = "dodge") +
xlab('Target side') + ylab('Mean accuracy') + labs(fill = "Subject number")
ggplot(stroopdatafinal, aes(phase, stroopeffect)) + geom_col(position = "dodge") +
xlab('Target side') + ylab('Mean accuracy') + labs(fill = "Subject number")
widestroopdata <- pivot_wider(summarisestroop, names_from = congruency, values_from = 'mean(rt)')
stroopnona <- drop_na(widestroopdata)
stroopdatafinal <- mutate(stroopnona, stroopeffect = incongruent-congruent)
stroopmodel <- lm(stroopeffect ~ phase, stroopdatafinal)
ggplot(stroopdatafinal, aes(phase, stroopeffect)) + geom_col(position = "dodge") +
xlab('Target side') + ylab('Mean accuracy') + labs(fill = "Subject number")
ggplot(stroopdatafinal, aes(phase, stroopeffect)) + geom_col(position = "dodge") +
xlab('Block Type') + ylab('Stroop Effect (Difference Between congruent and Incongruent Trials)') + labs(fill = "Subject number")
ggplot(stroopdatafinal, aes(phase, stroopeffect)) +
xlab('Block Type') + ylab('Stroop Effect (Difference Between Congruent and Incongruent Trials)') + labs(fill = "Subject number")
ggplot(stroopdatafinal, aes(phase, stroopeffect)) + geom_col(position = "dodge") +
xlab('Block Type') + ylab('Stroop Effect (Difference Between Congruent and Incongruent Trials)') + labs(fill = "Subject number")
ggplot(stroopdatafinal, aes(phase, stroopeffect)) + geom_col() +
xlab('Block Type') + ylab('Stroop Effect (Difference Between Congruent and Incongruent Trials)') + labs(fill = "Subject number")
ggplot(stroopdatafinal, aes(phase, stroopeffect, fill = phase)) + geom_col() +
xlab('Block Type') + ylab('Stroop Effect (Difference Between Congruent and Incongruent Trials)') + labs(fill = "Subject number")
ggplot(stroopdatafinal, aes(phase, stroopeffect, fill = phase)) + geom_col() +
xlab('Block Type') + ylab('Stroop Effect (Difference Between Congruent and Incongruent Trials)')
ggplot(stroopdatafinal, aes(phase, stroopeffect, fill = subject)) + geom_col() +
xlab('Block Type') + ylab('Stroop Effect (Difference Between Congruent and Incongruent Trials)')
ggplot(stroopdatafinal, aes(phase, stroopeffect, fill = congruency)) + geom_col() +
xlab('Block Type') + ylab('Stroop Effect (Difference Between Congruent and Incongruent Trials)')
ggplot(stroopdatafinal, aes(phase, stroopeffect)) + geom_col() +
xlab('Block Type') + ylab('Stroop Effect (Difference Between Congruent and Incongruent Trials)')
ggplot(stroopdatafinal, aes(phase, stroopeffect)) +
xlab('Block Type') + ylab('Stroop Effect (Difference Between Congruent and Incongruent Trials)')
ggplot(stroopdatafinal, aes(phase, stroopeffect)) + geom_point() +
xlab('Block Type') + ylab('Stroop Effect (Difference Between Congruent and Incongruent Trials)')
ggplot(stroopdatafinal, aes(phase, stroopeffect)) + geom_col() +
xlab('Block Type') + ylab('Stroop Effect (Difference Between Congruent and Incongruent Trials)')
pcaspotifydata <- select(spotifydata, -X, -Track.Name, -Artist, -Streams, -time_signature)
pcaspotifydata2 <- prcomp(pcaspotifydata)
summary(pcaspotifydata2)
factoextra::fviz_eig(pcaspotifydata2)
fviz_pca_var(pcaspotifydata2)
cor(pcaspotifydata2)
cor(pcaspotifydata2, PC1, PC2)
pcaspotifydata3 <- prcomp(pcaspotifydata2, scale = TRUE)
summary(pcaspotifydata3)
factoextra::fviz_eig(pcaspotifydata3)
library('tidyverse')
library('lme4')
library('factoextra')
# Loading in the Stroop data.
stroopdata <- read.csv('stroop_standing_data.csv')
# I am cleaning the data by first removing the mistrials and then removing the practice phase trials. I am choosing to do this as the mistrial data will be incorrect and the practice trials are there to allow the participant to understand the task before the real trials begin.
stroopdataclean <- stroopdata %>%
select(subject, age, gender, condition, phase, trial, stimulus, congruency, rt, correct) %>%
filter(correct != 999) %>%
filter(phase != 'practice') %>%
filter(congruency != 'baseline') %>%
mutate(rt = as.numeric(rt))
stroopdataclean$rt <- as.numeric(stroopdataclean$rt)
stroopnona <- drop_na(stroopdataclean)
stroopnona$subject <- factor(stroopnona$subject)
stroopnona$congruency <- factor(stroopnona$congruency)
groupstroop <- group_by(stroopnona, subject, congruency, phase)
summarisestroop <- summarise(groupstroop, mean_rt = mean(rt))
widestroopdata <- pivot_wider(summarisestroop, names_from = congruency, values_from = 'mean_rt')
stroopdatafinal <- mutate(widestroopdata, stroopeffect = incongruent-congruent)
stroopdatamodel <- lmer(stroopeffect ~ phase + (1|subject), stroopdatafinal)
stroopdataplot <- ggplot(stroopdatafinal, aes(phase, stroopeffect)) + geom_col()
ggplot(stroopdatafinal, aes(phase, stroopeffect, fill = factor(phase))) + geom_boxplot() + geom_jitter(alpha = 0.5)
pcaspotifydata <- select(spotifydata, -X, -Track.Name, -Artist, -Streams, -time_signature)
pcaspotifydata2 <- prcomp(pcaspotifydata)
summary(pcaspotifydata2)
factoextra::fviz_eig(pcaspotifydata2)
fviz_pca_var(pcaspotifydata2)
cor(pcaspotifydata2)
pcaspotifydata3 <- prcomp(pcaspotifydata2, scale = TRUE)
summary(pcaspotifydata3)
factoextra::fviz_eig(pcaspotifydata3)
pcaspotifydata <- select(spotifydata, -X, -Track.Name, -Artist, -Streams, -time_signature)
pcaspotifydata2 <- prcomp(pcaspotifydata)
summary(pcaspotifydata2)
factoextra::fviz_eig(pcaspotifydata2)
fviz_pca_var(pcaspotifydata2)
cor(pcaspotifydata2)
pcaspotifydata3 <- prcomp(pcaspotifydata2, scale = TRUE)
summary(pcaspotifydata3)
factoextra::fviz_eig(pcaspotifydata3)
pcaspotifydata <- select(spotifydata, -X, -Track.Name, -Artist, -Streams, -time_signature)
setwd("~/PG Year 1/Spring Modules/PS947 Advanced Statistics for Research/Homework3")
pcaspotifydata <- select(spotifydata, -X, -Track.Name, -Artist, -Streams, -time_signature)
# Loading in the Stroop data.
spotifydata <- read.csv('spotify_cleaned.csv')
pcaspotifydata <- select(spotifydata, -X, -Track.Name, -Artist, -Streams, -time_signature)
pcaspotifydata2 <- prcomp(pcaspotifydata)
summary(pcaspotifydata2)
factoextra::fviz_eig(pcaspotifydata2)
fviz_pca_var(pcaspotifydata2)
cor(pcaspotifydata2)
# I am cleaning the data by first removing the mistrials and then removing the practice phase trials. I am choosing to do this as the mistrial data will be incorrect and the practice trials are there to allow the participant to understand the task before the real trials begin.
stroopdataclean <- stroopdata %>%
select(subject, age, gender, condition, phase, trial, stimulus, congruency, rt, correct) %>%
filter(correct != 999) %>%
filter(phase != 'practice') %>%
filter(congruency != 'baseline') %>%
mutate(rt = as.numeric(rt)) %>%
drop_na()
#stroopdataclean$rt <- as.numeric(stroopdataclean$rt)
#stroopnona <- drop_na(stroopdataclean)
stroopnona$subject <- factor(stroopnona$subject)
stroopnona$congruency <- factor(stroopnona$congruency)
groupstroop <- group_by(stroopnona, subject, congruency, phase)
summarisestroop <- summarise(groupstroop, mean_rt = mean(rt))
widestroopdata <- pivot_wider(summarisestroop, names_from = congruency, values_from = 'mean_rt')
stroopdatafinal <- mutate(widestroopdata, stroopeffect = incongruent-congruent)
stroopdatamodel <- lmer(stroopeffect ~ phase + (1|subject), stroopdatafinal)
stroopdataplot <- ggplot(stroopdatafinal, aes(phase, stroopeffect)) + geom_col()
ggplot(stroopdatafinal, aes(phase, stroopeffect, fill = factor(phase))) + geom_boxplot() + geom_jitter(alpha = 0.5)
# I am cleaning the data by first removing the mistrials and then removing the practice phase trials. I am choosing to do this as the mistrial data will be incorrect and the practice trials are there to allow the participant to understand the task before the real trials begin.
stroopdataclean <- stroopdata %>%
select(subject, age, gender, condition, phase, trial, stimulus, congruency, rt, correct) %>%
filter(correct != 999) %>%
filter(phase != 'practice') %>%
filter(congruency != 'baseline') %>%
mutate(rt = as.numeric(rt)) %>%
drop_na()
#stroopdataclean$rt <- as.numeric(stroopdataclean$rt)
#stroopnona <- drop_na(stroopdataclean)
stroopdataclean$subject <- factor(stroopdataclean$subject)
stroopdataclean$congruency <- factor(stroopdataclean$congruency)
groupstroop <- group_by(stroopnona, subject, congruency, phase)
summarisestroop <- summarise(groupstroop, mean_rt = mean(rt))
widestroopdata <- pivot_wider(summarisestroop, names_from = congruency, values_from = 'mean_rt')
stroopdatafinal <- mutate(widestroopdata, stroopeffect = incongruent-congruent)
stroopdatamodel <- lmer(stroopeffect ~ phase + (1|subject), stroopdatafinal)
stroopdataplot <- ggplot(stroopdatafinal, aes(phase, stroopeffect)) + geom_col()
ggplot(stroopdatafinal, aes(phase, stroopeffect, fill = factor(phase))) + geom_boxplot() + geom_jitter(alpha = 0.5)
View(stroopdataclean)
# I am cleaning the data by first removing the mistrials and then removing the practice phase trials. I am choosing to do this as the mistrial data will be incorrect and the practice trials are there to allow the participant to understand the task before the real trials begin.
stroopdataclean <- stroopdata %>%
select(subject, age, gender, condition, phase, trial, stimulus, congruency, rt, correct) %>%
filter(correct != 999) %>%
filter(phase != 'practice') %>%
filter(congruency != 'baseline') %>%
mutate(rt = as.numeric(rt)) %>%
drop_na()
#stroopdataclean$subject <- factor(stroopdataclean$subject)
#stroopdataclean$congruency <- factor(stroopdataclean$congruency)
groupstroop <- group_by(stroopnona, subject, congruency, phase)
summarisestroop <- summarise(groupstroop, mean_rt = mean(rt))
widestroopdata <- pivot_wider(summarisestroop, names_from = congruency, values_from = 'mean_rt')
stroopdatafinal <- mutate(widestroopdata, stroopeffect = incongruent-congruent)
stroopdatamodel <- lmer(stroopeffect ~ phase + (1|subject), stroopdatafinal)
stroopdataplot <- ggplot(stroopdatafinal, aes(phase, stroopeffect)) + geom_col()
ggplot(stroopdatafinal, aes(phase, stroopeffect, fill = factor(phase))) + geom_boxplot() + geom_jitter(alpha = 0.5)
stroopdataclean <- group_by(stroopdataclean, subject, congruency, phase)
stroopdataclean <- summarise(stroopdataclean, mean_rt = mean(rt))
stroopdataclean <- pivot_wider(stroopdataclean, names_from = congruency, values_from = 'mean_rt')
stroopdataclean <- mutate(widestroopdata, stroopeffect = incongruent-congruent)
stroopdatamodel <- lmer(stroopeffect ~ phase + (1|subject), stroopdataclean)
stroopdataplot <- ggplot(stroopdatafinal, aes(phase, stroopeffect)) + geom_col()
ggplot(stroopdatafinal, aes(phase, stroopeffect, fill = factor(phase))) + geom_boxplot() + geom_jitter(alpha = 0.5)
# I am cleaning the data by first removing the mistrials and then removing the practice phase trials. I am choosing to do this as the mistrial data will be incorrect and the practice trials are there to allow the participant to understand the task before the real trials begin.
stroopdataclean <- stroopdata %>%
select(subject, age, gender, condition, phase, trial, stimulus, congruency, rt, correct) %>%
filter(correct != 999, 0) %>%
filter(phase != 'practice') %>%
filter(congruency != 'baseline') %>%
mutate(rt = as.numeric(rt)) %>%
drop_na()
# I am cleaning the data by first removing the mistrials and then removing the practice phase trials. I am choosing to do this as the mistrial data will be incorrect and the practice trials are there to allow the participant to understand the task before the real trials begin.
stroopdataclean <- stroopdata %>%
select(subject, age, gender, condition, phase, trial, stimulus, congruency, rt, correct) %>%
filter(correct != 999) %>%
filter(correct != 0) %>%
filter(phase != 'practice') %>%
filter(congruency != 'baseline') %>%
mutate(rt = as.numeric(rt)) %>%
drop_na()
# I am cleaning the data by first removing the mistrials and then removing the practice phase trials. I am choosing to do this as the mistrial data will be incorrect and the practice trials are there to allow the participant to understand the task before the real trials begin.
stroopdataclean <- stroopdata %>%
select(subject, age, gender, condition, phase, trial, stimulus, congruency, rt, correct) %>%
filter(correct != 999) %>%
filter(phase != 'practice') %>%
filter(congruency != 'baseline') %>%
mutate(rt = as.numeric(rt)) %>%
drop_na()
# I am cleaning the data by first removing the mistrials and then removing the practice phase trials. I am choosing to do this as the mistrial data will be incorrect and the practice trials are there to allow the participant to understand the task before the real trials begin.
stroopdataclean <- stroopdata %>%
select(subject, age, gender, condition, phase, trial, stimulus, congruency, rt, correct) %>%
filter(correct != 999) %>%
filter(phase != 'practice') %>%
filter(congruency != 'baseline') %>%
mutate(rt = as.numeric(rt)) %>%
drop_na()
# I am cleaning the data by first removing the mistrials and then removing the practice phase trials. I am choosing to do this as the mistrial data will be incorrect and the practice trials are there to allow the participant to understand the task before the real trials begin.
stroopdataclean <- stroopdata %>%
select(subject, age, gender, condition, phase, trial, stimulus, congruency, rt, correct) %>%
filter(correct != 999) %>%
filter(correct != 0) %>%
filter(phase != 'practice') %>%
filter(congruency != 'baseline') %>%
mutate(rt = as.numeric(rt)) %>%
drop_na()
# I am cleaning the data by first removing the mistrials and then removing the practice phase trials. I am choosing to do this as the mistrial data will be incorrect and the practice trials are there to allow the participant to understand the task before the real trials begin.
stroopdataclean <- stroopdata %>%
select(subject, age, gender, condition, phase, trial, stimulus, congruency, rt, correct) %>%
filter(correct != 999) %>%
filter(correct != 0) %>%
filter(phase != 'practice') %>%
filter(congruency != 'baseline') %>%
drop_na() %>%
mutate(rt = as.numeric(rt))
# I am cleaning the data by first removing the mistrials and then removing the practice phase trials. I am choosing to do this as the mistrial data will be incorrect and the practice trials are there to allow the participant to understand the task before the real trials begin.
stroopdataclean <- stroopdata %>%
select(subject, age, gender, condition, phase, trial, stimulus, congruency, rt, correct) %>%
drop_na() %>%
filter(correct != 999) %>%
filter(correct != 0) %>%
filter(phase != 'practice') %>%
filter(congruency != 'baseline') %>%
mutate(rt = as.numeric(rt))
# I am cleaning the data by first removing the mistrials and then removing the practice phase trials. I am choosing to do this as the mistrial data will be incorrect and the practice trials are there to allow the participant to understand the task before the real trials begin.
stroopdataclean <- stroopdata %>%
select(subject, age, gender, condition, phase, trial, stimulus, congruency, rt, correct) %>%
drop_na() %>%
filter(correct != 999) %>%
filter(correct != 0) %>%
filter(phase != 'practice') %>%
filter(congruency != 'baseline') %>%
mutate(rt = as.numeric(rt))
stroopdataclean <- group_by(stroopdataclean, subject, congruency, phase)
stroopdataclean <- summarise(stroopdataclean, mean_rt = mean(rt))
stroopdataclean <- pivot_wider(stroopdataclean, names_from = congruency, values_from = 'mean_rt')
#Adding a new variable which calculates 'Stroop Effect' which is the difference between the incongruent and congruent conditions
stroopdataclean <- mutate(widestroopdata, stroopeffect = incongruent-congruent)
stroopdatamodel <- lmer(stroopeffect ~ phase + (1|subject), stroopdataclean)
stroopdataplot <- ggplot(stroopdatafinal, aes(phase, stroopeffect)) + geom_col()
ggplot(stroopdatafinal, aes(phase, stroopeffect, fill = factor(phase))) + geom_boxplot() + geom_jitter(alpha = 0.5)
View(widestroopdata)
#Summarising the data to create a mean reaction time to see how this the reaction time differed across different phases (sitting vs standing) and congruency (congruent vs incongruent)
stroopdataclean <- group_by(stroopdataclean, subject, congruency, phase)
#Summarising the data to create a mean reaction time to see how this the reaction time differed across different phases (sitting vs standing) and congruency (congruent vs incongruent)
stroopdataclean <- group_by(stroopdataclean, subject, phase)
stroopdataclean <- summarise(stroopdataclean, mean_rt = mean(rt))
#Pivoting the data so that
stroopdataclean <- pivot_wider(stroopdataclean, names_from = congruency, values_from = 'mean_rt')
#Summarising the data to create a mean reaction time to see how this the reaction time differed across different phases (sitting vs standing) and congruency (congruent vs incongruent)
stroopdataclean <- group_by(stroopdataclean, subject, congruency, phase)
stroopdataclean <- stroopdata %>%
select(subject, age, gender, condition, phase, trial, stimulus, congruency, rt, correct) %>%
drop_na() %>%
filter(correct != 999) %>%
filter(correct != 0) %>%
filter(phase != 'practice') %>%
filter(congruency != 'baseline') %>%
mutate(rt = as.numeric(rt))
#Summarising the data to create a mean reaction time to see how this the reaction time differed across different phases (sitting vs standing) and congruency (congruent vs incongruent)
stroopdataclean <- group_by(stroopdataclean, subject, congruency, phase)
stroopdataclean <- summarise(stroopdataclean, mean_rt = mean(rt))
#Pivoting the data so
stroopdataclean <- pivot_wider(stroopdataclean, names_from = congruency, values_from = 'mean_rt')
#Adding a new variable which calculates 'Stroop Effect' which is the difference between the incongruent and congruent conditions
stroopdataclean <- mutate(widestroopdata, stroopeffect = incongruent-congruent)
stroopdatamodel <- lmer(stroopeffect ~ phase + (1|subject), stroopdataclean)
summary(stroopdatamodel)
stroopdataplot <- ggplot(stroopdatafinal, aes(phase, stroopeffect)) + geom_col()
ggplot(stroopdatafinal, aes(phase, stroopeffect, fill = factor(phase))) + geom_boxplot() + geom_jitter(alpha = 0.5)
#Summarising the data to create a mean reaction time to see how this the reaction time differed across different phases (sitting vs standing) and congruency (congruent vs incongruent)
stroopdataclean <- group_by(stroopdataclean, subject, congruency, phase)
# I am cleaning the data by first removing the mistrials and then removing the practice phase trials. I am choosing to do this as the mistrial data will be incorrect and the practice trials are there to allow the participant to understand the task before the real trials begin.
stroopdataclean <- stroopdata %>%
select(subject, age, gender, condition, phase, trial, stimulus, congruency, rt, correct) %>%
drop_na() %>%
filter(correct != 999) %>%
filter(correct != 0) %>%
filter(phase != 'practice') %>%
filter(congruency != 'baseline') %>%
mutate(rt = as.numeric(rt))
#Summarising the data to create a mean reaction time to see how this the reaction time differed across different phases (sitting vs standing) and congruency (congruent vs incongruent)
stroopdataclean <- group_by(stroopdataclean, subject, congruency, phase)
stroopdataclean <- summarise(stroopdataclean, mean_rt = mean(rt))
#Pivoting the data so
stroopdataclean <- pivot_wider(stroopdataclean, names_from = congruency, values_from = 'mean_rt')
#Adding a new variable which calculates 'Stroop Effect' which is the difference between the incongruent and congruent conditions
stroopdataclean <- mutate(stroopdataclean, stroopeffect = incongruent-congruent)
stroopdatamodel <- lmer(stroopeffect ~ phase + (1|subject), stroopdataclean)
summary(stroopdatamodel)
stroopdataplot <- ggplot(stroopdatafinal, aes(phase, stroopeffect)) + geom_col()
ggplot(stroopdatafinal, aes(phase, stroopeffect, fill = factor(phase))) + geom_boxplot() + geom_jitter(alpha = 0.5)
library('tidyverse')
library('lme4')
library('factoextra')
# Loading in the Stroop data.
stroopdata <- read.csv('stroop_standing_data.csv')
# I am cleaning the data by first removing the mistrials and then removing the practice phase trials. I am choosing to do this as the mistrial data will be incorrect and the practice trials are there to allow the participant to understand the task before the real trials begin.
stroopdataclean <- stroopdata %>%
select(subject, age, gender, condition, phase, trial, stimulus, congruency, rt, correct) %>%
drop_na() %>%
filter(correct != 999) %>%
filter(correct != 0) %>%
filter(phase != 'practice') %>%
filter(congruency != 'baseline') %>%
mutate(rt = as.numeric(rt))
#Summarising the data to create a mean reaction time to see how this the reaction time differed across different phases (sitting vs standing) and congruency (congruent vs incongruent)
stroopdataclean <- group_by(stroopdataclean, subject, congruency, phase)
stroopdataclean <- summarise(stroopdataclean, mean_rt = mean(rt))
#Pivoting the data so
stroopdataclean <- pivot_wider(stroopdataclean, names_from = congruency, values_from = 'mean_rt')
#Adding a new variable which calculates 'Stroop Effect' which is the difference between the incongruent and congruent conditions
stroopdataclean <- mutate(stroopdataclean, stroopeffect = incongruent-congruent)
stroopdatamodel <- lmer(stroopeffect ~ phase + (1|subject), stroopdataclean)
summary(stroopdatamodel)
stroopdataplot <- ggplot(stroopdatafinal, aes(phase, stroopeffect)) + geom_col()
# Loading in the Stroop data.
stroopdata <- read.csv('stroop_standing_data.csv')
# I am cleaning the data by first removing the mistrials and then removing the practice phase trials. I am choosing to do this as the mistrial data will be incorrect and the practice trials are there to allow the participant to understand the task before the real trials begin.
stroopdataclean <- stroopdata %>%
select(subject, age, gender, condition, phase, trial, stimulus, congruency, rt, correct) %>%
drop_na() %>%
filter(correct != 999) %>%
filter(correct != 0) %>%
filter(phase != 'practice') %>%
filter(congruency != 'baseline') %>%
mutate(rt = as.numeric(rt))
#Summarising the data to create a mean reaction time to see how this the reaction time differed across different phases (sitting vs standing) and congruency (congruent vs incongruent)
stroopdataclean <- group_by(stroopdataclean, subject, congruency, phase)
stroopdataclean <- summarise(stroopdataclean, mean_rt = mean(rt))
#Pivoting the data so
stroopdataclean <- pivot_wider(stroopdataclean, names_from = congruency, values_from = 'mean_rt')
#Adding a new variable which calculates 'Stroop Effect' which is the difference between the incongruent and congruent conditions
stroopdataclean <- mutate(stroopdataclean, stroopeffect = incongruent-congruent)
stroopdatamodel <- lmer(stroopeffect ~ phase + (1|subject), stroopdataclean)
summary(stroopdatamodel)
stroopdataplot <- ggplot(stroopdataclean, aes(phase, stroopeffect)) + geom_col()
ggplot(stroopdatafinal, aes(phase, stroopeffect, fill = factor(phase))) + geom_boxplot() + geom_jitter(alpha = 0.5)
library('tidyverse')
library('lme4')
library('factoextra')
# Loading in the Stroop data.
stroopdata <- read.csv('stroop_standing_data.csv')
# I am cleaning the data by first removing the mistrials and then removing the practice phase trials. I am choosing to do this as the mistrial data will be incorrect and the practice trials are there to allow the participant to understand the task before the real trials begin.
stroopdataclean <- stroopdata %>%
select(subject, age, gender, condition, phase, trial, stimulus, congruency, rt, correct) %>%
drop_na() %>%
filter(correct != 999) %>%
filter(correct != 0) %>%
filter(phase != 'practice') %>%
filter(congruency != 'baseline') %>%
mutate(rt = as.numeric(rt))
#Summarising the data to create a mean reaction time to see how this the reaction time differed across different phases (sitting vs standing) and congruency (congruent vs incongruent)
stroopdataclean <- group_by(stroopdataclean, subject, congruency, phase)
stroopdataclean <- summarise(stroopdataclean, mean_rt = mean(rt))
#Pivoting the data so
stroopdataclean <- pivot_wider(stroopdataclean, names_from = congruency, values_from = 'mean_rt')
#Adding a new variable which calculates 'Stroop Effect' which is the difference between the incongruent and congruent conditions
stroopdataclean <- mutate(stroopdataclean, stroopeffect = incongruent-congruent)
stroopdatamodel <- lmer(stroopeffect ~ phase + (1|subject), stroopdataclean)
summary(stroopdatamodel)
stroopdataplot <- ggplot(stroopdataclean, aes(phase, stroopeffect)) + geom_col()
ggplot(stroopdataclean, aes(phase, stroopeffect, fill = factor(phase))) + geom_boxplot() + geom_jitter(alpha = 0.5)
